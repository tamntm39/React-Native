{"ast":null,"code":"// import React, { useReducer, useState } from \"react\";\n// import { calculateWinner } from \"../../helpers\";\n// import Board from \"./Board\";\n// import \"./GameStyles.css\";\n// //gtri khoi tao \n// const initialState = {\n//   board: Array(9).fill(null),\n//   xIsNext: true,\n// };\n// const gameReducer = (state, action) => {\n//     switch (action.type) {\n//         case 'CLICK':\n//             const {board, setBoard} = state;\n//             const {index, winner} = action.payload();\n//             if(winner || board[index]) return;\n//             const nextState = JSON.parse(JSON.stringify(state));\n//             return nextState;\n//             break;\n\n//         default:\n//             break;\n//     }\n//   return state;\n// };\n// const Game = () => {\n// //   const [board, setBoard] = useState(Array(9).fill(null));\n// //   const [xIsNext, setXIsNext] = useState(true);\n\n//   //useReducer\n//   const [state, dispatch] = useReducer(gameReducer, initialState);\n//   //const action = {type: 'CLICK', payload:{}}\n//   //dispatch({type: 'CLICK'})\n//   //   const [state, setState] = useState({\n//   //     board: Array(9).fill(null),\n//   //     xIsNext: true,\n//   //     name: \"tam\",\n//   //   })\n\n//   const winner = calculateWinner(state.board);\n//   const handleClick = (index) => {\n//     // const boardCopy = [...state.board];\n//     // if (winner || boardCopy[index]) return;\n//     dispatch({\n//       type: \"CLICK\",\n//       payload: {\n//         index,\n//         winner,\n//       },\n//     });\n// //     boardCopy[index] = xIsNext ? \"X\" : \"O\";\n// //     setBoard(boardCopy);\n// //     setXIsNext(!xIsNext);\n//   };\n//   const handleResetGame = () => {\n//     dispatch({\n//         type: 'RESET',\n//     })\n//     // setBoard(Array(9).fill(null));\n//     // setXIsNext(true);\n//   };\n//   return (\n//     <div>\n//       <Board cells={state.board} onClick={handleClick}></Board>\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\n//       <button className=\"game-reset\" onClick={handleResetGame}>\n//         Reset game\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default Game;","map":{"version":3,"names":[],"sources":["D:/StudyCode/my-app/src/components/tictactoe/Game.js"],"sourcesContent":["// import React, { useReducer, useState } from \"react\";\r\n// import { calculateWinner } from \"../../helpers\";\r\n// import Board from \"./Board\";\r\n// import \"./GameStyles.css\";\r\n// //gtri khoi tao \r\n// const initialState = {\r\n//   board: Array(9).fill(null),\r\n//   xIsNext: true,\r\n// };\r\n// const gameReducer = (state, action) => {\r\n//     switch (action.type) {\r\n//         case 'CLICK':\r\n//             const {board, setBoard} = state;\r\n//             const {index, winner} = action.payload();\r\n//             if(winner || board[index]) return;\r\n//             const nextState = JSON.parse(JSON.stringify(state));\r\n//             return nextState;\r\n//             break;\r\n    \r\n//         default:\r\n//             break;\r\n//     }\r\n//   return state;\r\n// };\r\n// const Game = () => {\r\n// //   const [board, setBoard] = useState(Array(9).fill(null));\r\n// //   const [xIsNext, setXIsNext] = useState(true);\r\n\r\n//   //useReducer\r\n//   const [state, dispatch] = useReducer(gameReducer, initialState);\r\n//   //const action = {type: 'CLICK', payload:{}}\r\n//   //dispatch({type: 'CLICK'})\r\n//   //   const [state, setState] = useState({\r\n//   //     board: Array(9).fill(null),\r\n//   //     xIsNext: true,\r\n//   //     name: \"tam\",\r\n//   //   })\r\n\r\n//   const winner = calculateWinner(state.board);\r\n//   const handleClick = (index) => {\r\n//     // const boardCopy = [...state.board];\r\n//     // if (winner || boardCopy[index]) return;\r\n//     dispatch({\r\n//       type: \"CLICK\",\r\n//       payload: {\r\n//         index,\r\n//         winner,\r\n//       },\r\n//     });\r\n// //     boardCopy[index] = xIsNext ? \"X\" : \"O\";\r\n// //     setBoard(boardCopy);\r\n// //     setXIsNext(!xIsNext);\r\n//   };\r\n//   const handleResetGame = () => {\r\n//     dispatch({\r\n//         type: 'RESET',\r\n//     })\r\n//     // setBoard(Array(9).fill(null));\r\n//     // setXIsNext(true);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <Board cells={state.board} onClick={handleClick}></Board>\r\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n//       <button className=\"game-reset\" onClick={handleResetGame}>\r\n//         Reset game\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Game;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}